[[syntax trees at end of                    patmat]] // test.scala
package <empty> {
  class Test extends scala.AnyRef {
    def <init>(): Test = {
      Test.super.<init>();
      ()
    };
    def test: Unit = {
      case <synthetic> val x1: (Int, Int, Int, Int, Int, Int, Int, Int, Int, Int) = scala.Tuple10.apply[Int, Int, Int, Int, Int, Int, Int, Int, Int, Int](1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
      case24(){
        if (x1.ne(null).unary_!)
          case25();
        <synthetic> val p2: Int = x1._1;
        <synthetic> val p3: Int = x1._2;
        <synthetic> val p4: Int = x1._3;
        <synthetic> val p5: Int = x1._4;
        <synthetic> val p6: Int = x1._5;
        <synthetic> val p7: Int = x1._6;
        <synthetic> val p8: Int = x1._7;
        <synthetic> val p9: Int = x1._8;
        <synthetic> val p10: Int = x1._9;
        <synthetic> val p11: Int = x1._10;
        if (1.==(p2).unary_!)
          case25();
        if (2.==(p3).unary_!)
          case25();
        if (3.==(p4).unary_!)
          case25();
        if (4.==(p5).unary_!)
          case25();
        if (5.==(p6).unary_!)
          case25();
        if (6.==(p7).unary_!)
          case25();
        if (7.==(p8).unary_!)
          case25();
        if (8.==(p9).unary_!)
          case25();
        if (9.==(p10).unary_!)
          case25();
        if (10.==(p11).unary_!)
          case25();
        matchEnd23(())
      };
      case25(){
        matchEnd23(())
      };
      matchEnd23(x: Unit){
        x
      }
    }
  }
}

